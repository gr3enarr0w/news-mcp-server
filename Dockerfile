# News MCP Server Dockerfile\n# Multi-source news aggregation with AI synthesis\n\nFROM node:20-alpine AS builder\n\n# Set working directory\nWORKDIR /app\n\n# Copy package files\nCOPY package*.json ./\n\n# Install dependencies\nRUN npm ci --only=production && npm cache clean --force\n\n# Production stage\nFROM node:20-alpine AS production\n\n# Install dumb-init for proper signal handling\nRUN apk add --no-cache dumb-init curl\n\n# Create app user for security\nRUN addgroup -g 1001 -S mcp && \\\n    adduser -S mcp -u 1001\n\n# Set working directory\nWORKDIR /app\n\n# Copy dependencies from builder\nCOPY --from=builder /app/node_modules ./node_modules\nCOPY --chown=mcp:mcp package*.json ./\n\n# Copy source code\nCOPY --chown=mcp:mcp src/ ./src/\nCOPY --chown=mcp:mcp config/ ./config/\n\n# Create cache directory\nRUN mkdir -p /app/cache && chown -R mcp:mcp /app/cache\n\n# Copy entrypoint script\nCOPY docker-entrypoint.sh /usr/local/bin/\nRUN chmod +x /usr/local/bin/docker-entrypoint.sh\n\n# Switch to non-root user\nUSER mcp\n\n# Expose port for health checks (not used for MCP stdio)\nEXPOSE 3000\n\n# Health check to ensure server is responding\nHEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \\\n  CMD node -e \"console.log('News MCP server health check')\" || exit 1\n\n# Environment variables\nENV NODE_ENV=production\nENV MCP_TRANSPORT=stdio\n\n# Labels for Unraid\nLABEL org.opencontainers.image.title=\"News MCP Server\"\nLABEL org.opencontainers.image.description=\"Multi-source news aggregation with AI synthesis for unbiased reporting\"\nLABEL org.opencontainers.image.version=\"1.0.0\"\nLABEL org.opencontainers.image.vendor=\"Claude Code Generated\"\nLABEL org.opencontainers.image.source=\"https://github.com/gr3enarr0w/news-mcp-server\"\n\n# Use dumb-init as entrypoint for proper signal handling\nENTRYPOINT [\"dumb-init\", \"--\"]\nCMD [\"/usr/local/bin/docker-entrypoint.sh\"]